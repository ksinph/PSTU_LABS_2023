<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than draw.io -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="861px" height="792px" viewBox="-0.5 -0.5 861 792" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2024-05-05T17:49:19.056Z&quot; agent=&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 YaBrowser/24.4.0.0 Safari/537.36&quot; etag=&quot;BBNPwmi5tX4gI5QgxIG2&quot; version=&quot;24.3.1&quot; type=&quot;github&quot;&gt;&#10;  &lt;diagram name=&quot;Страница — 1&quot; id=&quot;OSJ2dcP6ni_R6Soa-ws_&quot;&gt;&#10;    &lt;mxGraphModel dx=&quot;1386&quot; dy=&quot;791&quot; grid=&quot;1&quot; gridSize=&quot;10&quot; guides=&quot;1&quot; tooltips=&quot;1&quot; connect=&quot;1&quot; arrows=&quot;1&quot; fold=&quot;1&quot; page=&quot;1&quot; pageScale=&quot;1&quot; pageWidth=&quot;827&quot; pageHeight=&quot;1169&quot; math=&quot;0&quot; shadow=&quot;0&quot;&gt;&#10;      &lt;root&gt;&#10;        &lt;mxCell id=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;1&quot; parent=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;7Twsqg1LUwfEyWepTwoT-1&quot; value=&quot;Object&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;320&quot; y=&quot;350&quot; width=&quot;160&quot; height=&quot;90&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;7Twsqg1LUwfEyWepTwoT-3&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;&quot; vertex=&quot;1&quot; parent=&quot;7Twsqg1LUwfEyWepTwoT-1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;160&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;7Twsqg1LUwfEyWepTwoT-4&quot; value=&quot;+Object(void)&amp;lt;div&amp;gt;&amp;lt;div&amp;gt;+~Object(void);&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;white-space: normal;&amp;quot;&amp;gt;+Show()=0:&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;virtual void&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;7Twsqg1LUwfEyWepTwoT-1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;34&quot; width=&quot;160&quot; height=&quot;56&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;7Twsqg1LUwfEyWepTwoT-13&quot; value=&quot;Triad&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;230&quot; y=&quot;510&quot; width=&quot;360&quot; height=&quot;278&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;7Twsqg1LUwfEyWepTwoT-14&quot; value=&quot;&amp;lt;div&amp;gt;#first:&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;int&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;white-space: normal;&amp;quot;&amp;gt;#second&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;:&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;int&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;white-space: normal;&amp;quot;&amp;gt;#third&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;:&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;int&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;7Twsqg1LUwfEyWepTwoT-13&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;360&quot; height=&quot;54&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;7Twsqg1LUwfEyWepTwoT-15&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;&quot; vertex=&quot;1&quot; parent=&quot;7Twsqg1LUwfEyWepTwoT-13&quot;&gt;&#10;          &lt;mxGeometry y=&quot;80&quot; width=&quot;360&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;7Twsqg1LUwfEyWepTwoT-16&quot; value=&quot;&amp;lt;div&amp;gt;+virtual ~Triad(void)&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;white-space: normal;&amp;quot;&amp;gt;+Triad(int, int, int)&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;white-space: normal;&amp;quot;&amp;gt;+Triad(const Triad&amp;amp;amp;)&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;white-space: normal;&amp;quot;&amp;gt;+int Get_first() :&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;int&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;white-space: normal;&amp;quot;&amp;gt;+&amp;amp;nbsp;Get_second() :&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;int&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;white-space: normal;&amp;quot;&amp;gt;+&amp;amp;nbsp;Get_third()&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;:&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;int&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;+&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;&amp;amp;nbsp;Set_first(int):&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;void&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;white-space: normal;&amp;quot;&amp;gt;+&amp;amp;nbsp;Set_second(int)&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;:&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;void&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;white-space: normal;&amp;quot;&amp;gt;+Set_third(int)&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;:&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;void&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;white-space: normal;&amp;quot;&amp;gt;+operator=(const Triad&amp;amp;amp;):&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;Triad&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;white-space: normal;&amp;quot;&amp;gt;+&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;operator&amp;amp;gt;&amp;amp;gt;(std::istream&amp;amp;amp; in, Triad&amp;amp;amp; c)::&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;std::istream&amp;amp;amp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;white-space: normal;&amp;quot;&amp;gt;+operator&amp;amp;lt;&amp;amp;lt;(std::ostream&amp;amp;amp; out, const Triad&amp;amp;amp; c):&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;std::ostream&amp;amp;amp;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;7Twsqg1LUwfEyWepTwoT-13&quot;&gt;&#10;          &lt;mxGeometry y=&quot;88&quot; width=&quot;360&quot; height=&quot;190&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;7Twsqg1LUwfEyWepTwoT-17&quot; value=&quot;Time&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;230&quot; y=&quot;860&quot; width=&quot;360&quot; height=&quot;278&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;7Twsqg1LUwfEyWepTwoT-18&quot; value=&quot;&amp;lt;div&amp;gt;#&amp;amp;nbsp;hour:&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;int&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;white-space: normal;&amp;quot;&amp;gt;#&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;minute:&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;int&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;white-space: normal;&amp;quot;&amp;gt;#&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;seconds:&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;int&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;7Twsqg1LUwfEyWepTwoT-17&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;360&quot; height=&quot;54&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;7Twsqg1LUwfEyWepTwoT-19&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;&quot; vertex=&quot;1&quot; parent=&quot;7Twsqg1LUwfEyWepTwoT-17&quot;&gt;&#10;          &lt;mxGeometry y=&quot;80&quot; width=&quot;360&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;7Twsqg1LUwfEyWepTwoT-20&quot; value=&quot;&amp;lt;div&amp;gt;+virtual ~&amp;lt;span style=&amp;quot;text-align: center;&amp;quot;&amp;gt;Time&amp;lt;/span&amp;gt;(void)&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;white-space: normal;&amp;quot;&amp;gt;+&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;text-align: center;&amp;quot;&amp;gt;Time&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;white-space: normal;&amp;quot;&amp;gt;(int, int, int)&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;white-space: normal;&amp;quot;&amp;gt;+&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;text-align: center;&amp;quot;&amp;gt;Time&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;white-space: normal;&amp;quot;&amp;gt;(const Triad&amp;amp;amp;)&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;+int Get_hour() :&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;int&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;+&amp;amp;nbsp;Get_seconds() :&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;int&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;+&amp;amp;nbsp;Get_minute()&amp;amp;nbsp;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;:&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;int&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;+&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;&amp;amp;nbsp;Set_hour(int):&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;void&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;+&amp;amp;nbsp;Set_minute(int)&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;:&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;void&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;+Set_seconds(int)&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;:&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;void&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;white-space: normal;&amp;quot;&amp;gt;+operator=(const Triad&amp;amp;amp;):&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;text-align: center; background-color: initial;&amp;quot;&amp;gt;Time&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;white-space: normal;&amp;quot;&amp;gt;+&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;operator&amp;amp;gt;&amp;amp;gt;(std::istream&amp;amp;amp; in,&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;text-align: center;&amp;quot;&amp;gt;Time&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;&amp;amp;amp; c)::&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;std::istream&amp;amp;amp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;white-space: normal;&amp;quot;&amp;gt;+operator&amp;amp;lt;&amp;amp;lt;(std::ostream&amp;amp;amp; out, const&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;text-align: center;&amp;quot;&amp;gt;Time&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;white-space: normal;&amp;quot;&amp;gt;&amp;amp;amp; c):&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;std::ostream&amp;amp;amp;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;7Twsqg1LUwfEyWepTwoT-17&quot;&gt;&#10;          &lt;mxGeometry y=&quot;88&quot; width=&quot;360&quot; height=&quot;190&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;7Twsqg1LUwfEyWepTwoT-21&quot; value=&quot;&quot; style=&quot;endArrow=block;endSize=16;endFill=0;html=1;rounded=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.494;entryY=1.016;entryDx=0;entryDy=0;entryPerimeter=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;7Twsqg1LUwfEyWepTwoT-17&quot; target=&quot;7Twsqg1LUwfEyWepTwoT-16&quot;&gt;&#10;          &lt;mxGeometry width=&quot;160&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;226&quot; y=&quot;810&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;386&quot; y=&quot;810&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;7Twsqg1LUwfEyWepTwoT-22&quot; value=&quot;&quot; style=&quot;endArrow=block;endSize=16;endFill=0;html=1;rounded=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.494;entryY=1.016;entryDx=0;entryDy=0;entryPerimeter=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;160&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;402&quot; y=&quot;510&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;400&quot; y=&quot;441&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;7Twsqg1LUwfEyWepTwoT-23&quot; value=&quot;Vector&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;730&quot; y=&quot;510&quot; width=&quot;360&quot; height=&quot;180&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;7Twsqg1LUwfEyWepTwoT-24&quot; value=&quot;+ field: type&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;7Twsqg1LUwfEyWepTwoT-23&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;360&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;7Twsqg1LUwfEyWepTwoT-25&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;&quot; vertex=&quot;1&quot; parent=&quot;7Twsqg1LUwfEyWepTwoT-23&quot;&gt;&#10;          &lt;mxGeometry y=&quot;52&quot; width=&quot;360&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;7Twsqg1LUwfEyWepTwoT-26&quot; value=&quot;&amp;lt;div&amp;gt;+Vector(void)&amp;amp;nbsp;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;white-space: normal;&amp;quot;&amp;gt;+Vector(int)&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;div style=&amp;quot;&amp;quot;&amp;gt;~Vector(void)&amp;lt;/div&amp;gt;&amp;lt;div style=&amp;quot;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;white-space: normal;&amp;quot;&amp;gt;+ Add(Object *):&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;void&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=&amp;quot;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;white-space: normal;&amp;quot;&amp;gt;+&amp;amp;nbsp;operator&amp;amp;lt;&amp;amp;lt;(std::ostream&amp;amp;amp; out, +const Vector&amp;amp;amp;):&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;std::ostream&amp;amp;amp;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;7Twsqg1LUwfEyWepTwoT-23&quot;&gt;&#10;          &lt;mxGeometry y=&quot;60&quot; width=&quot;360&quot; height=&quot;120&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;7Twsqg1LUwfEyWepTwoT-28&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;480&quot; y=&quot;400&quot; width=&quot;430&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;7Twsqg1LUwfEyWepTwoT-30&quot; value=&quot;&quot; style=&quot;endArrow=none;html=1;rounded=0;entryX=0.998;entryY=0.5;entryDx=0;entryDy=0;entryPerimeter=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;7Twsqg1LUwfEyWepTwoT-23&quot; target=&quot;7Twsqg1LUwfEyWepTwoT-28&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;390&quot; y=&quot;630&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;440&quot; y=&quot;580&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;      &lt;/root&gt;&#10;    &lt;/mxGraphModel&gt;&#10;  &lt;/diagram&gt;&#10;&lt;/mxfile&gt;&#10;" resource="https://app.diagrams.net/?src=about#Hksinph%2FPSTU_LABS_2023%2Fmain%2FSem_2%2FLabs%2FCLASS_5%2Fclass5.drawio.svg#%7B%22pageId%22%3A%22OSJ2dcP6ni_R6Soa-ws_%22%7D"><defs/><g><g><path d="M 90 26 L 90 0 L 250 0 L 250 26" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 90 26 L 90 90 L 250 90 L 250 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 90 26 L 250 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 158px; height: 1px; padding-top: 7px; margin-left: 91px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;">Object</div></div></div></foreignObject><text x="170" y="19" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">Object</text></switch></g></g><g><path d="M 90 30 L 250 30" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><rect x="90" y="34" width="160" height="56" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 150px; height: 1px; padding-top: 41px; margin-left: 96px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 52px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">+Object(void)<div><div>+~Object(void);</div><div><span style="white-space: normal;">+Show()=0:</span><span style="background-color: initial;">virtual void</span></div></div></div></div></div></foreignObject><text x="96" y="53" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">+Object(void)...</text></switch></g></g><g><path d="M 0 186 L 0 160 L 360 160 L 360 186" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 0 186 L 0 438 L 360 438 L 360 186" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 186 L 360 186" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 358px; height: 1px; padding-top: 167px; margin-left: 1px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;">Triad</div></div></div></foreignObject><text x="180" y="179" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">Triad</text></switch></g></g><g><rect x="0" y="186" width="360" height="54" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 350px; height: 1px; padding-top: 193px; margin-left: 6px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 50px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div>#first:<span style="background-color: initial;">int</span><span style="background-color: initial;"> </span></div><div><span style="white-space: normal;">#second</span><span style="background-color: initial;">:</span><span style="background-color: initial;">int</span><span style="background-color: initial;"> </span></div><div><span style="white-space: normal;">#third</span><span style="background-color: initial;">:</span><span style="background-color: initial;">int</span><span style="background-color: initial;"> </span></div></div></div></div></foreignObject><text x="6" y="205" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">#first:int...</text></switch></g></g><g><path d="M 0 244 L 360 244" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><rect x="0" y="248" width="360" height="190" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 350px; height: 1px; padding-top: 255px; margin-left: 6px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 186px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div>+virtual ~Triad(void)</div><div><span style="white-space: normal;">+Triad(int, int, int)</span></div><div><span style="white-space: normal;">+Triad(const Triad&amp;)</span></div><div><span style="white-space: normal;">+int Get_first() :</span><span style="background-color: initial;">int</span></div><div><span style="white-space: normal;">+ Get_second() :</span><span style="background-color: initial;">int</span></div><div><span style="white-space: normal;">+ Get_third() </span><span style="background-color: initial;">:</span><span style="background-color: initial;">int</span></div><div>+<span style="background-color: initial;"> Set_first(int):</span><span style="background-color: initial;">void</span></div><div><span style="white-space: normal;">+ Set_second(int)</span><span style="background-color: initial;">:</span><span style="background-color: initial;">void</span></div><div><span style="white-space: normal;">+Set_third(int)</span><span style="background-color: initial;">:</span><span style="background-color: initial;">void</span></div><div><span style="white-space: normal;">+operator=(const Triad&amp;):</span><span style="background-color: initial;">Triad</span></div><div><span style="white-space: normal;">+</span><span style="background-color: initial;">operator&gt;&gt;(std::istream&amp; in, Triad&amp; c)::</span><span style="background-color: initial;">std::istream&amp;</span><span style="background-color: initial;"> </span></div><div><span style="white-space: normal;">+operator&lt;&lt;(std::ostream&amp; out, const Triad&amp; c):</span><span style="background-color: initial;">std::ostream&amp;</span></div></div></div></div></foreignObject><text x="6" y="267" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">+virtual ~Triad(void)...</text></switch></g></g><g><path d="M 0 536 L 0 510 L 360 510 L 360 536" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 0 536 L 0 788 L 360 788 L 360 536" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 536 L 360 536" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 358px; height: 1px; padding-top: 517px; margin-left: 1px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;">Time</div></div></div></foreignObject><text x="180" y="529" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">Time</text></switch></g></g><g><rect x="0" y="536" width="360" height="54" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 350px; height: 1px; padding-top: 543px; margin-left: 6px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 50px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div># hour:<span style="background-color: initial;">int</span><span style="background-color: initial;"> </span></div><div><span style="white-space: normal;">#</span><span style="background-color: initial;">minute:</span><span style="background-color: initial;">int</span><span style="background-color: initial;"> </span></div><div><span style="white-space: normal;">#</span><span style="background-color: initial;">seconds:</span><span style="background-color: initial;">int</span><span style="background-color: initial;"> </span></div></div></div></div></foreignObject><text x="6" y="555" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px"># hour:int...</text></switch></g></g><g><path d="M 0 594 L 360 594" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><rect x="0" y="598" width="360" height="190" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 350px; height: 1px; padding-top: 605px; margin-left: 6px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 186px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div>+virtual ~<span style="text-align: center;">Time</span>(void)</div><div><span style="white-space: normal;">+</span><span style="text-align: center;">Time</span><span style="white-space: normal;">(int, int, int)</span></div><div><span style="white-space: normal;">+</span><span style="text-align: center;">Time</span><span style="white-space: normal;">(const Triad&amp;)</span></div><div>+int Get_hour() :<span style="background-color: initial;">int</span></div><div>+ Get_seconds() :<span style="background-color: initial;">int</span></div><div>+ Get_minute() <span style="background-color: initial;">:</span><span style="background-color: initial;">int</span></div><div>+<span style="background-color: initial;"> Set_hour(int):</span><span style="background-color: initial;">void</span></div><div>+ Set_minute(int)<span style="background-color: initial;">:</span><span style="background-color: initial;">void</span></div><div>+Set_seconds(int)<span style="background-color: initial;">:</span><span style="background-color: initial;">void</span></div><div><span style="white-space: normal;">+operator=(const Triad&amp;):</span><span style="text-align: center; background-color: initial;">Time</span></div><div><span style="white-space: normal;">+</span><span style="background-color: initial;">operator&gt;&gt;(std::istream&amp; in, </span><span style="text-align: center;">Time</span><span style="background-color: initial;">&amp; c)::</span><span style="background-color: initial;">std::istream&amp;</span><span style="background-color: initial;"> </span></div><div><span style="white-space: normal;">+operator&lt;&lt;(std::ostream&amp; out, const </span><span style="text-align: center;">Time</span><span style="white-space: normal;">&amp; c):</span><span style="background-color: initial;">std::ostream&amp;</span></div></div></div></div></foreignObject><text x="6" y="617" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">+virtual ~Time(void)...</text></switch></g></g><g><path d="M 180 510 L 178.41 459.15" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 177.88 442.16 L 186.9 458.88 L 169.91 459.42 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><path d="M 172 160 L 170.52 109.11" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 170.03 92.12 L 179.02 108.86 L 162.03 109.36 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><path d="M 500 186 L 500 160 L 860 160 L 860 186" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 500 186 L 500 340 L 860 340 L 860 186" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 500 186 L 860 186" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 358px; height: 1px; padding-top: 167px; margin-left: 501px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;">Vector</div></div></div></foreignObject><text x="680" y="179" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">Vector</text></switch></g></g><g><rect x="500" y="186" width="360" height="26" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 350px; height: 1px; padding-top: 193px; margin-left: 506px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 22px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">+ field: type</div></div></div></foreignObject><text x="506" y="205" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">+ field: type</text></switch></g></g><g><path d="M 500 216 L 860 216" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><rect x="500" y="220" width="360" height="120" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 350px; height: 1px; padding-top: 227px; margin-left: 506px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 116px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div>+Vector(void) </div><div><span style="white-space: normal;">+Vector(int)</span></div><div><div style="">~Vector(void)</div><div style=""><span style="white-space: normal;">+ Add(Object *):</span><span style="background-color: initial;">void</span></div><div style=""><span style="white-space: normal;">+ operator&lt;&lt;(std::ostream&amp; out, +const Vector&amp;):</span><span style="background-color: initial;">std::ostream&amp;</span></div></div></div></div></div></foreignObject><text x="506" y="239" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">+Vector(void)...</text></switch></g></g><g><path d="M 250 54 L 680 54" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><path d="M 680 160 L 679.14 54" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.drawio.com/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>